name: Release Merge

on:
  pull_request:

permissions:
  pull-requests: write
  contents: write

jobs:
  merge-and-tag:
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.title, 'Release')
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Check version consistency
      run: |
        echo "Pull request title: ${{ github.event.pull_request.title }}"
        # Extract the version from foo/__init__.py
        VERSION=$(grep __version__ foo/__init__.py | cut -d'"' -f2)

        # Extract the version from the branch name
        echo $GITHUB_REF
        PULL_REQUEST_NAME=${{ github.event.pull_request.title }}

        BRANCH_VERSION=$(echo $BRANCH_NAME | cut -d'/' -f2)

        # Compare the versions
        if [ "$VERSION" != "$BRANCH_VERSION" ]; then
          echo "::error::version mismatch between foo/__init__.py=$VERSION and branch=$BRANCH_VERSION"
          exit 1
        fi

    - name: Tag
      if: github.event.pull_request.merged == true && github.event.pull_request.merged_by != null
      run: |
        tag=$(echo "${{ github.event.push.ref }}" | sed 's/release\///')
        git tag -a "${tag}" -m "Release ${tag}"
        git push origin "${tag}"
